import React, { HTMLAttributes, ReactNode } from 'react';
export interface CMultiSelectProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /**
     * A string of all className you want applied to the base component.
     */
    className?: string;
    /**
     * Enables selection cleaner element.
     */
    cleaner?: boolean;
    /**
     * It specifies that multiple options can be selected at once.
     */
    multiple?: boolean;
    /**
     * Execute a function when a user changes the selected option.
     */
    onChange?: (selected: Option[]) => void;
    /**
     * List of option elements.
     */
    options: Option[];
    /**
     * Sets maxHeight of options list.
     */
    optionsMaxHeight?: number | string;
    /**
     * Sets option style.
     */
    optionsStyle?: 'checkbox' | 'text';
    /**
     * Specifies a short hint that is visible in the search input.
     */
    placeholder?: string;
    /**
     * Enables search input element.
     */
    search?: boolean;
    /**
     * Sets the label for no results when filtering.
     */
    searchNoResultsLabel?: string | ReactNode;
    /**
     * Enables select all button.
     */
    selectAll?: boolean;
    /**
     * Sets the select all button label.
     */
    selectAllLabel?: string | ReactNode;
    /**
     * Sets the selection style.
     */
    selectionType?: 'counter' | 'tags' | 'text';
    /**
     * Sets the counter selection label.
     */
    selectionTypeCounterText?: string;
    /**
     * Toggle the visibility of multi select dropdown.
     */
    visible?: boolean;
}
export interface Option {
    disabled?: boolean;
    label?: string;
    options?: Option[];
    order?: number;
    selected?: boolean;
    text: string;
    value: number | string;
}
export declare const CMultiSelect: React.ForwardRefExoticComponent<CMultiSelectProps & React.RefAttributes<HTMLDivElement>>;
